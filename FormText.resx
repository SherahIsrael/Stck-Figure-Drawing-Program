<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colourDB.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAB3DAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAAwxSURBVHja7Z0JcFbVGYbfLIQsEELYQbYRKRVQymjVcaBFKSgVla3UskraDkhB3Eit
        BbUgZSuIgLZNoWzFlkVERZQSlqZWLYRFViMzQlsiCLKIrIGk50eMxJB8/z3/uf89J7zPmWGGzLmE+b7n
        3nvOuWcBCLnqiEMy0lEPjdFUlcaoj5pIQTwDU7FJxrXohGGYisVYh63Iw178V5V9+AjbkINlmIHHcA9a
        oCqDVbGog7vxW6xRyT6NIqGcwyd4B9PQHQ0Rw9C5ThLaqzv+gzASX1qEPGShC1IZRFepgp54A8c9p/7y
        cgrrkYEaDKZrxKMj3sSZiJL/VTmvXgk9UZlBdYmuOGIk+V+V0/gFg+oSmUbTHyqzGFSXGG9cgKWIY1jd
        Icu4AGtUj4I4Qpy6X00LkIs0Btad3n+2cQHyUJ+BdYU0bDQuQD6uY2BdoZ66X00LcBRtGVhXaIb9xgU4
        hTsYWFdoq+5X0wKcR3cG1hU6qPu1yHj5KQPrCt3U/WpegEwG1hUyfEh/ESYwsK7wuC8CZDGwtpCALuiL
        PmWUB/CqLwK8h35l/s6+6IFqTEy0SMdmlZDCMkuRT6W833gALZiY6Amw1bck65ZP8W0mJlpUxzocwSGL
        ymHs4lBx9IhDM7Qqt7T0oZT/G1tw0phNpCDVcOFaAYdoqV4Rm7HJaNmATgysK2T60sybjViG1gWSfZgO
        EiofoSGD68YL4IAvApxBFwbXBXr58ikoVJ5icF1gtG+DPQu4XNQFZvkmwDrVviCWE4/lvgmwBekMsO0k
        YrVvAuxGHQbYfgGyfRSgLgNsOwlY4ZsAH3CnAPuJUW11vwTIQQoDbD/jfRNgEVcIu8Ag3wQYy+C6wC04
        5kv6z6MXg+sC6cj1RYD/oTmD6wZTfBFgmephECfogBPG038BAxlYV0jBSuMCbOMGES7R09AegV+XJxhU
        t54BZj8J5fL+d43bDc4LOoXeDKh7jFQNNzMCzEQlhtM9qmCekfT/nd8AXaW+gd5ALq5nIN2lCVZFlP6N
        +A6D6DbXYKH2gvG3ueK3IpCK0Rqbx5/EC6jN4FUMYtAR2R5WCxTiffRgy79ikYYM/Atnw/jouxkjOPmz
        YpKObpiLPWUMExdgHxahD5NfsYlFI9yNTMzBatXF24Gd2IL1eBnP4H5cy8Mjr6Z2QaJ6LdRSDb10JHPh
        NyGEEEKI2238mmiDLqozNwC9cJ+h0hP90Q/34mbUZT/BXpqopM/DVnyGsxdH/y+onr2Zcv7i6GABjmEX
        lmAoWrDXYButMQl7jE0AkVcIzEI7PgtsoQHGqpREe2/go8jiTAEbhnN+6MMRceGWPRjExSJBkownfTge
        ytvWcTNQi4kIhup4ybcN4byU19CUyYg+NTDfmrMC1qIZExJdUvFnq46LyEYjJiV6JKhOX6FVAhRhiXol
        kSjxkPGVfybKJI4MRIfv+bQZdKTlJPoyOf5TBzlWpv/LDeU5NOT7wM9Ya9MfKvN5cpC/3I5DVgtwGj9i
        kvwc+XvF6vSHyrscGfSPHuoOs12AQgxnovyhqo/7gJvdUbgBk+XP/X/GCQGK8DCTZZ4kvOFI+kOLytkO
        MM738bkzAhSgDxNmmpnOpD9UXkciU2aSJtjjlABHcCuTZpJBUZvwaao8x6SZIwHLHEt/qCHI42WMcT0+
        EcJ9VvW+o/mM+FDcjvoUfsDEmWJwGCf6jYvq/T0bb4cxP4AYIR6LxWA/jSFRFWAqBopPnH8jjckz0wP4
        WAj1YbQJ4ylhskxDA+wW6hzHbUyeCbrhnBDqFeop8VBUBXhB/b+mi7UeZfJMMEkM9FBVa2jUBbhL/Da5
        lLMEIycF64UwH0TrQASorXoe5dfK43fByGmBfCHMq5AUiADAS2JX8A4mMFK6o0AI86iL9YIQ4Mfi0rTH
        mMBIGSPeZR0DE6A59gv1FnAricioJJ798+Gl03yCECBJPKo+l+uFIqMOdgghfuVSSzsIAYCJYgO1JZMY
        CW3Fjd5HXaoZjABSK+Ac7mUSI6GXGOCugQpwIw7zvEE/eUoI74HiMz2CEaAGtgo1/8Qk6hODOUJ4NxR/
        cAlGgHgsFWquuThKQbRIFkcB/1rczQpGAOA5sZdSj4nUpT7yhPD+prhuUAIMELaqOIwbmEhdbhCaWIXo
        H7gA7XFS2EfsLiZSl87CWqCTKvxBC9BMHA3MYCJ1eVAIbT6aBy5AOjYLdZ9hInX5tbgMs2bgAiTgTaFu
        FhOpy4visc6JgQsA1dOXVgnxBEIt4sQ+9jzEWCDAs+KWEVWZTH9GASZcVjs4AaTpqLt5/LweNcQpV49Y
        IUA3YcrKfm4kq0cjYTp4YYlF2MEJ0E4YCTiKtkymDi3xqbAcrLMVArQWhqtOoQOTqcOtwpYQn+MWKwRo
        gn3CdhHdmEwdOgnjgAeLPwUHK0Bt7BRqD2QydeghTAbZi8ZWCJCK97lpVBADwTvVvWeDAIni1NBRTKYO
        w8TJINWsECBenLk8gcnU4UkhrOuRbIUAMfiLUHsmk6mDtC/4yhJHtgUnAPAHofYcJlOHKeLa2zhLBJgq
        1P4b1wfpIH0LXHDZp6BgBZDmBS7nMnEdZnuacB2kAKOE2m/xfFHveG1aBSnASE4NN08sFokbNdkiwAih
        dg5SmFCvxIubQ060RgDpd3NKiAaV8LqnzViDFODn4oZxqUyoVxKwIuxFIUELkCFuG5vGhHoXYKUQ1met
        EUD6arGJ20ToCPCWMwL0FzeyTWdCzT8B7HkF9BXWB27nETI6AkgLLsY4I8AOCuCHAGOtEaAfnwB+dAOl
        U8LGWSPAAKH2tsuWsJGwB4KkaRbjrRFgkFB7K08P0RFAOid4sjUC/EyovZndQD++BTxvjQDSVvUlJ6+R
        MAVY6MzXwIeF2u/xW4AOcz2tuw9SgCf4NdAPsoSwzrVGAGk3Q84H0GJG2FvEBS2AtKM5ZwRpMVkI67IS
        M+2CFEA61IZzArVwZ1q4dHwUZwVrIb1Z15Z4swYpwCxPrRUSJo96mmgVnAByh/X3TKYOgz2Nr3kX4JB6
        hqxRJRv/iXBt4KtC7d8xmTpI39h2oU5EAqxQT5BE9RpJwPMRCVAZqzzNXCBhIu0P8DEaRSTAa8Vt88kR
        CZCCfwq1M5lMHTrjbNgbxeoJUMmIAGnYJNQeymTq0A5fCO/wVlYIUAvbuUWMH9yIz4QnwHWWPAFyhU2i
        7mcydagrbL60IcJegCkB4rFYODKiDZOpQ4zwOSjSCSGmBJA6rNmowmTq0b6cUwPzv7H/ZpACXFPO2WHn
        VHeWaBKLMWWMBRTg8W/UDVIAoDdOlLmjeTITqU9VzLjCVsxnML7UF/ZgBYjFcBy74jY29ZnEyEjCENUY
        /Po5cB5bVLeq9Pf1YAUItVi6IqfEyMU+jOaSMDM0xADMxDJVpuGBMs7hC1qAEOm4T/1bS7FcNV+HlBim
        IgaIL3dahQ0CfEkcp38EgT0CEApAKAChAIQCEApAKAChAIQCEApAKAChAIQCEApAKAChAIQCEApAKACh
        AIQCEApAKAChAIQCEApAKAChAIQCEApAKAChAIQCEApAKAChAIQCEApAKAChAIQCUAAKQAEoAAWgABSA
        AlAACkABKAAFoAAUgAJQAApAASgABaAAFIACUAAKQAEoAAWgABSAAlAACkABKAAFoAAUgAJQAApAASgA
        BaAAFIACUAAKQAEoAAWgABSAAlAACkABKAAFoAAUgAJQAApAASgABaAAFIACXPUCTGfAbWOI5yQuR/yl
        ayd5vnYaA24b/T0ncSFiL137tOdrxzHgttERpz0mcULxtYM8CzCYAbeNptjrKYUX8JPia2/DcU/XnkA7
        Btw2KmGJpyTuQ7Pia9PwrqdrNyCdAbeP3jjnIYl/LG4BhBjpSYBfMdg2Ug2rw07hQXy3xLWNsD3sa3eq
        1w2xkjtxKKwUFmJUqWv7hdmIPIMHGWh7Ga4SJCfxZfW0KN2GmKjEkNWZjASG2eam4C/xhZDERah3xWur
        YBoKyr2yANNRlUG2mzj0QV6ZKTyKcahe5rWJGIH8Mq/NxyNIYoBd4FuYgr2lHuhHsFS1EmKFa2/CbBwo
        lfwD6qc3MbDuEKN6+RmYhbXYqMo76rGfiZtROcxnSCsMwwLkXLz2H5iv/tZa/ZQ4SLJq7qWpt7v39MUi
        RV1bTf0ZyzCSCsv/AbLnvglxER8WAAAAAElFTkSuQmCC
</value>
  </data>
</root>